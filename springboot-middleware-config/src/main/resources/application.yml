spring:
  application:
    name: springboot-middleware-config

  # 使用redis
  data:
    redis:
      host: localhost
      port: 6379
      password: root

  # kafka config
  # procedure要求leader在考虑完成请求之前收到的确认数，用于控制发送记录在服务端的持久化，其值可以为如下：
  # acks = 0 如果设置为零，则生产者将不会等待来自服务器的任何确认，该记录将立即添加到套接字缓冲区并视为已发送。在这种情况下，无法保证服务器已收到记录，并且重试配置将不会生效（因为客户端通常不会知道任何故障），为每条记录返回的偏移量始终设置为-1。
  # acks = 1 这意味着leader会将记录写入其本地日志，但无需等待所有副本服务器的完全确认即可做出回应，在这种情况下，如果leader在确认记录后立即失败，但在将数据复制到所有的副本服务器之前，则记录将会丢失。
  # acks = all 这意味着leader将等待完整的同步副本集以确认记录，这保证了只要至少一个同步副本服务器仍然存活，记录就不会丢失，这是最强有力的保证，这相当于acks = -1的设置。
  # 可以设置的值为：all, -1, 0, 1

  # 消费偏移配置
  # none：如果没有为消费者找到先前的offset的值,即没有自动维护偏移量,也没有手动维护偏移量,则抛出异常
  # earliest：在各分区下有提交的offset时：从offset处开始消费；在各分区下无提交的offset时：从头开始消费
  # latest：在各分区下有提交的offset时：从offset处开始消费；在各分区下无提交的offset时：从最新的数据开始消费
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      # kafka的事务 开启事务可以确保生产端 当kafka需要确保所有消息都被生产好后才对消费者可见
      # transaction-id-prefix: kafkaTx-
      retries: 3 # 重试三次
      batch-size: 16384
      acks: 1
      key-serializer: org.apache.kafka.common.serialization.JsonSerializer
      value-serializer: org.apache.kafka.common.serialization.JsonSerializer

    consumer:
      group-id: "test_group"
      enable-auto-commit: false # 手动写收到的标志位
      auto-offset-reset: earliest
      max-poll-records: 500  #一次拉取五百条
      key-deserializer: org.apache.kafka.common.serialization.JsonDeserializer
      value-deserializer: org.apache.kafka.common.serialization.JsonDeserializer

    # record：当每一条记录被消费者监听器ListenerConsumer处理之后提交
    # batch：当每一批poll()的数据被ListenerConsumer处理之后提交
    # time：当每一批poll()的数据被ListenerConsumer处理之后，距离上次提交时间大于TIME时提交
    # count：当每一批poll()的数据被ListenerConsumer处理之后，被处理record数量大于等于COUNT时提交
    # count_time：TIME或COUNT中有一个条件满足时提交
    # manual：当每一批poll()的数据被ListenerConsumer处理之后, 手动调用Acknowledgment.acknowledge()后提交
    # manual_immediate：手动调用Acknowledgment.acknowledge()后立即提交，一般推荐使用这种
    listener:
      ack-mode: manual_immediate


  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    virtual-host: /
    requested-heartbeat: 30
    listener:
      direct:
        acknowledge-mode: manual #手动确认
